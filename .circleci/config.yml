version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.5-node
        environment:
          PGHOST: 127.0.0.1
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432
          REDIS_URL: redis://redis@localhost:6379
      - image: circleci/postgres:11.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
      - image: circleci/redis:latest
    parallelism: 1
    steps:
      - checkout

      - run: gem update --system
      - run: gem install bundler

      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run: sudo apt install postgresql-client
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Additional checks
          command: |
              if [ $CIRCLE_NODE_INDEX = 0 ]; then
                bundle exec bundle-audit update
                bundle exec bundle-audit check
              elif [ $CIRCLE_NODE_INDEX = 1 ]; then
                bin/rubocop
              fi
      - run:
          name: Specs
          command: |
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb")
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out ~/spec-timings/rspec.xml --format progress
      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs

      